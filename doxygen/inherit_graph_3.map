<map id="Graphical Class Hierarchy" name="Graphical Class Hierarchy">
<area shape="rect" id="node1" href="$classhtgs_1_1_any_i_task.html" title="Implements the parent ITask, which removes the template arguments of an ITask. " alt="" coords="6,155,117,181"/>
<area shape="rect" id="node2" href="$classhtgs_1_1_i_task.html" title="An interface to process input data and forward results within a TaskGraph. " alt="" coords="188,67,327,93"/>
<area shape="rect" id="node5" href="$classhtgs_1_1_i_task.html" title="htgs::ITask\&lt; MemoryData\l\&lt; T \&gt;, MemoryData\&lt; T \&gt; \&gt;" alt="" coords="167,118,348,159"/>
<area shape="rect" id="node8" href="$classhtgs_1_1_i_task.html" title="htgs::ITask\&lt; T, VoidData \&gt;" alt="" coords="166,184,349,211"/>
<area shape="rect" id="node10" href="$classhtgs_1_1_i_task.html" title="htgs::ITask\&lt; U, W \&gt;" alt="" coords="186,235,329,261"/>
<area shape="rect" id="node3" href="$classhtgs_1_1_execution_pipeline.html" title="The ExecutionPipeline class is used to duplicate task graphs, such that each duplicate executes concu..." alt="" coords="410,5,569,46"/>
<area shape="rect" id="node4" href="$classhtgs_1_1_i_cuda_task.html" title="An ICudaTask is used to attach a task to an NVIDIA Cuda GPU. " alt="" coords="405,71,574,97"/>
<area shape="rect" id="node6" href="$classhtgs_1_1_memory_manager.html" title="Processes MemoryData between two ITasks using a memory pool. " alt="" coords="397,125,581,152"/>
<area shape="rect" id="node7" href="$classhtgs_1_1_cuda_memory_manager.html" title="Implements a MemoryManager that binds the thread responsible for the MemoryManager to a CUDA GPU prio..." alt="" coords="630,125,845,152"/>
<area shape="rect" id="node9" href="$classhtgs_1_1_bookkeeper.html" title="Special task used to manage rules. " alt="" coords="411,184,567,211"/>
</map>
